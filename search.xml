<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/04/14/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>说明</title>
    <url>/2020/04/14/%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>个人博客，分享学习经验、趣闻。</p>
<a id="more"></a>
<img src="/2020/04/14/%E8%AF%B4%E6%98%8E/%E5%A4%B4%E5%83%8F.jpg" class="">
<h2 id="大体计划"><a href="#大体计划" class="headerlink" title="大体计划"></a>大体计划</h2><p>每月至少写一篇学习笔记，或者其他相关文章。督促自己。</p>
]]></content>
  </entry>
  <entry>
    <title>MySQL数据库知识总结（一）</title>
    <url>/2020/05/08/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<p>知识点不常用就会忘记。这篇文章大体写了单表操作的一些常用语法，方便以后查询和回顾复习。</p>
<a id="more"></a>

<h2 id="数据库大体概念"><a href="#数据库大体概念" class="headerlink" title="数据库大体概念"></a>数据库大体概念</h2><p>对应关系：</p>
<ol>
<li>数据库（DATABASE）：文件夹</li>
<li>表（TABLE）：文件</li>
<li>数据：文件中的数据</li>
</ol>
<h2 id="四种分类"><a href="#四种分类" class="headerlink" title="四种分类"></a>四种分类</h2><h3 id="1-DDL（Data-Definition-Language）数据定义语言"><a href="#1-DDL（Data-Definition-Language）数据定义语言" class="headerlink" title="1.DDL（Data Definition Language）数据定义语言"></a>1.DDL（Data Definition Language）数据定义语言</h3><p>用来定义数据库对象：数据库、表、列等。关键字：CREATE、DROP、ALTER等。</p>
<h4 id="对数据库：CRUD"><a href="#对数据库：CRUD" class="headerlink" title="对数据库：CRUD"></a>对数据库：CRUD</h4><h5 id="1-C（Create）：创建"><a href="#1-C（Create）：创建" class="headerlink" title="1.C（Create）：创建"></a>1.C（Create）：创建</h5><ul>
<li><p>创建数据库：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE 数据库名称；</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建数据库，判断不存在之后再创建：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS 数据库名称；</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>创建数据库，并制定字符集：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE IF NOT EXISTS 数据库名称 CHARACTER SET GBK;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h5 id="2-R（Retrieve）：查询"><a href="#2-R（Retrieve）：查询" class="headerlink" title="2.R（Retrieve）：查询"></a>2.R（Retrieve）：查询</h5><ul>
<li><p>查询所有数据库的名称：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SHOW DATABASES;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>查询某个数据库的字符集（创建语句）：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SHOW CREATE DATABASE 数据库名称；</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h5 id="3-U（Update）：修改"><a href="#3-U（Update）：修改" class="headerlink" title="3.U（Update）：修改"></a>3.U（Update）：修改</h5><ul>
<li><p>修改数据库的字符集</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER DATABASE 数据库名称 CHARACTER SET UTF8；</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h5 id="4-D（Delete）：删除"><a href="#4-D（Delete）：删除" class="headerlink" title="4.D（Delete）：删除"></a>4.D（Delete）：删除</h5><ul>
<li><p>删除数据库</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DROP DATABASE 数据库名称；</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>判断数据库是否存在，存在则删除</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DROP DATABASE IF EXISTS 数据库名称；</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h5 id="5-使用数据库："><a href="#5-使用数据库：" class="headerlink" title="5.使用数据库："></a>5.使用数据库：</h5><ul>
<li><p>查询当前正在使用的数据库名称</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT DATABASE();</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>使用数据库</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">USE 数据库名称；</span><br></pre></td></tr></table></figure>





</li>
</ul>
<h4 id="对表：CRUD"><a href="#对表：CRUD" class="headerlink" title="对表：CRUD"></a>对表：CRUD</h4><h5 id="1-C（Create）：创建-1"><a href="#1-C（Create）：创建-1" class="headerlink" title="1.C（Create）：创建"></a>1.C（Create）：创建</h5><ul>
<li><p>创建表：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE 表名称（</span><br><span class="line">	列名1 数据类型1，</span><br><span class="line">	列名2 数据类型2，</span><br><span class="line">	....</span><br><span class="line">	列名n 数据类型n</span><br><span class="line">）；-- 注意：最有一列，不需要加逗号</span><br></pre></td></tr></table></figure>

<ul>
<li>数据类型：</li>
</ul>
<ol>
<li>INT ：整数类型</li>
<li>DOUBLE：小数类型，source double（4,1），表示共四位，小数点后取一位</li>
<li>DATE：日期，只包含年月日，yyyy-MM-dd HH:mm:ss</li>
<li>DATATIME：日期，包含年月日时分秒，yyyy-MM-dd HH:mm:ss</li>
<li>TIMESTAMP：时间戳类型，包含年月日，不赋值或NULL则使用系统时间</li>
<li>VARCHAR：字符串，name varchar（20）：姓名最大20个字符。</li>
</ol>
</li>
</ul>
<ul>
<li><p>复制现有数据库中的表：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE 表名称（</span><br><span class="line">	列名1 数据类型1，</span><br><span class="line">列名2 数据类型2，</span><br><span class="line">	....</span><br><span class="line">	列名n 数据类型n</span><br><span class="line">）；-- 注意：最有一列，不需要加逗号</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h5 id="2-R（Retrieve）：查询-1"><a href="#2-R（Retrieve）：查询-1" class="headerlink" title="2.R（Retrieve）：查询"></a>2.R（Retrieve）：查询</h5><ul>
<li><p>查询某个数据库中的所有表名称：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SHOW TABLES;</span><br></pre></td></tr></table></figure>


</li>
</ul>
<ul>
<li><p>查询表结构：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DESC 表名；</span><br></pre></td></tr></table></figure>


</li>
</ul>
<h5 id="3-U（Update）：修改-1"><a href="#3-U（Update）：修改-1" class="headerlink" title="3.U（Update）：修改"></a>3.U（Update）：修改</h5><ul>
<li><p>修改表名：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 RENAME TO 新表名；</span><br></pre></td></tr></table></figure>


</li>
</ul>
<ul>
<li><p>修改表的字符集：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER DATABASE 表名 CHARACTER SET UTF8；</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>添加一列：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 ADD 列名 数据类型；</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>修改列名称 类型：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 CHANGE 列名 新列名 新数据类;型；</span><br><span class="line">ALTER TABLE 表名 MODIFY 列名 新数据类型；</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p>删除列：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 DROP 列名；</span><br></pre></td></tr></table></figure>


</li>
</ul>
<h5 id="4-D（Delete）：删除-1"><a href="#4-D（Delete）：删除-1" class="headerlink" title="4.D（Delete）：删除"></a>4.D（Delete）：删除</h5><ul>
<li><p>删除表</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DROP TABLE 表名；</span><br></pre></td></tr></table></figure>


</li>
</ul>
<ul>
<li><p>判断数据库是否存在，存在则删除</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DROP TABLE IF EXISTS 数据库名称；</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h3 id="2-DML（Data-Manipulation-Language）"><a href="#2-DML（Data-Manipulation-Language）" class="headerlink" title="2.DML（Data Manipulation Language）"></a>2.DML（Data Manipulation Language）</h3><p>对数据库中的表的数据进行增删改。关键字：INSERT、DELETE、UPDATE等。</p>
<h5 id="1-添加数据："><a href="#1-添加数据：" class="headerlink" title="1.添加数据："></a>1.添加数据：</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INESRT INTO 表名(列名1,列名2,...列名n) VALUE(值1,值2,...值n)；</span><br></pre></td></tr></table></figure>



<ul>
<li>注意：<ul>
<li>列名和值要一一对应</li>
<li>如果在表名后不定义列名，则默认给所有列添加值</li>
<li>除了数字类型，其他类型需要使用引号（单双都可）</li>
</ul>
</li>
</ul>
<h5 id="2-删除数据："><a href="#2-删除数据：" class="headerlink" title="2.删除数据："></a>2.删除数据：</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DELETE FROM 表名 WHERE 条件；</span><br></pre></td></tr></table></figure>



<ul>
<li><p>注意：</p>
<ul>
<li><p>如果不加条件，默认删除表中所有记录。</p>
</li>
<li><p>如果要删除所有记录。有两种方式：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DELETE FEOM 表名;-- 不推荐，有多少记录则删除多少次，效率低</span><br><span class="line">TEUNCATE TABLE 表名;-- 推荐使用，效率高，先删除整个表，人后再创建一张一样的空表</span><br></pre></td></tr></table></figure>


</li>
</ul>
</li>
</ul>
<h5 id="3-修改数据："><a href="#3-修改数据：" class="headerlink" title="3.修改数据："></a>3.修改数据：</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UPDATE 表名 SET 列名1 &#x3D; 值1, 列名2&#x3D;值2,... WHERE 条件；</span><br></pre></td></tr></table></figure>



<ul>
<li><p>注意：</p>
<ul>
<li>如果不加任何条件，则会将表中的所有记录全部修改。</li>
</ul>
</li>
</ul>
<h3 id="3-DQL（Data-Query-Language）"><a href="#3-DQL（Data-Query-Language）" class="headerlink" title="3.DQL（Data Query Language）"></a>3.DQL（Data Query Language）</h3><p>查询数据库中表的记录（数据）。关键字：SELECT、WHERE等。</p>
<h5 id="1-语法："><a href="#1-语法：" class="headerlink" title="1.语法："></a>1.语法：</h5><p>SELECT  字段列表 </p>
<p>FROM 表名列表 </p>
<p>WHERE条件列表 </p>
<p>GROUP BY 分组列表 </p>
<p>HAVING 分组之后的条件</p>
<p>ORDER BY 排序</p>
<p>LIMIT 分页限定</p>
<h5 id="2-基础查询："><a href="#2-基础查询：" class="headerlink" title="2.基础查询："></a>2.基础查询：</h5><ol>
<li><p>多个字段的查询</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT 列名1,列名2 FROM 表名；</span><br><span class="line">SELECT * FEOM 表名；-- 查询所有表名</span><br></pre></td></tr></table></figure>
</li>
<li><p>去除重复</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT DISTINCT 列名 FROM 表名;</span><br><span class="line">SELECT DISTINCT 列名1,列名2 FROM 表名; -- 两列数据完全一致才可以去重</span><br></pre></td></tr></table></figure>
</li>
<li><p>计算列</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT 列名1,列名2,列名3,列名2 + 列名3 FROM 表名;</span><br><span class="line">-- 如果一列有null值，可以使用IFNULL()判断</span><br><span class="line">SELECT 列名1,列名2,列名3,列名2 + IFNULL(列名3,0) FROM 表名;</span><br></pre></td></tr></table></figure>
</li>
<li><p>起别名</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 可以使用AS对列起别名</span><br><span class="line">SELECT 列名1,列名2,列名3,列名2 + IFNULL(列名3,0) AS 列表3&#96; FROM 表名;</span><br></pre></td></tr></table></figure>


</li>
</ol>
<h5 id="3-条件查询："><a href="#3-条件查询：" class="headerlink" title="3.条件查询："></a>3.条件查询：</h5><ol>
<li><p>WHERE子句后跟条件</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 查询年龄等于20岁</span><br><span class="line">SELECT * FROM 表名 WHERE 列名 &#x3D; 20;</span><br><span class="line">-- 查询年龄不等于20岁</span><br><span class="line">SELECT * FROM 表名 WHERE 列名 !&#x3D; 20;-- 或者使用&lt;&gt;</span><br><span class="line">-- 查询年龄大于等于20 或小于等于30岁</span><br><span class="line">SELECT * FROM 表名 WHERE 列名 BETWEEN 20 AND 30;-- 或者使用 &amp;&amp;(AND) 链接两条语句</span><br><span class="line">-- 查询年龄15,20,25岁的信息</span><br><span class="line">SELECT * FROM 表名 WHERE 列名 &#x3D; 15 OR 列名 &#x3D; 20 OR 列名 &#x3D; 25;</span><br><span class="line">SELECT * FROM 表名 WHERE 列名 IN (15,20,25);</span><br><span class="line">-- 查询带有null值的信息</span><br><span class="line">SELECT * FROM 表名 WHERE 列名 IS NULL;-- 不是NULL,则使用 IS NOT NULL</span><br><span class="line">-- 模糊查询</span><br><span class="line">SELECT * FROM 表名 WHERE 列名 LIKE &#39;飞%&#39;; -- 可以查到飞机，飞船，飞毛腿等等</span><br><span class="line">SELECT * FROM 表名 WHERE 列名 LIKE &#39;_飞%&#39;; -- 可以查到‘大飞哥’等第二个字是飞的信息</span><br><span class="line">SELECT * FROM 表名 WHERE 列名 LIKE &#39;%飞%&#39;; -- 查询包含飞的任意信息</span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="2">
<li><p>运算符</p>
<ul>
<li><p>&lt;、&gt;、&lt;=、&gt;=、=、&lt;&gt;(!=)</p>
</li>
<li><p>BETWEEN…AND</p>
</li>
<li><p>IN(集合)</p>
</li>
<li><p>LIKE：模糊查询</p>
<pre><code>占位符：

         _：单个任意字符

        %：多个任意字符</code></pre></li>
<li><p>IS NULL：null值判断</p>
</li>
<li><p>AND 或 &amp;&amp;</p>
</li>
<li><p>OR    或 || </p>
</li>
<li><p>NOT 或  ！</p>
</li>
</ul>
</li>
</ol>
<h5 id="4-排序查询"><a href="#4-排序查询" class="headerlink" title="4.排序查询:"></a>4.排序查询:</h5><ol>
<li><p>语法：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT * FROM 表名 ORDER BY 列名 ASC;-- 升序</span><br><span class="line">SELECT * FROM 表名 ORDER BY 列名 DESC;-- 降序</span><br><span class="line">-- 多条件排序</span><br><span class="line">SELECT * FROM 表名 ORDER BY 列名1 ASC, 列名2 DESC;-- 满足第一列条件后按照第二列条件排序</span><br></pre></td></tr></table></figure>
</li>
<li><p>排序方式：</p>
<p> ASC-升序；DESC-降序</p>
</li>
<li><p>注意：</p>
<p> 有多个排序条件时，则当前面的条件值相同时，才会判断第二条件</p>
</li>
</ol>
<h5 id="5-聚合函数"><a href="#5-聚合函数" class="headerlink" title="5.聚合函数:"></a>5.聚合函数:</h5><p>将一列数据作为一个整体，进行<strong>纵向</strong>的计算。其计算会排除NUll值。</p>
<ol>
<li><p>COUNT：计数</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT COUNT(列名) FROM 表名;</span><br><span class="line">SELECT COUNT(IFNULL(列名,0) FROM 表名;</span><br></pre></td></tr></table></figure>


</li>
</ol>
<ol start="2">
<li><p>MAX：最大值</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT MAX(列名) FROM 表名;</span><br></pre></td></tr></table></figure>


</li>
</ol>
<ol start="3">
<li><p>MIN：最小值</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT MIN(列名) FROM 表名;</span><br></pre></td></tr></table></figure>
</li>
<li><p>SUM：求和</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT SUM(列名) FROM 表名;</span><br></pre></td></tr></table></figure>
</li>
<li><p>AVG：平均值</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT AVG(列名) FROM 表名;</span><br></pre></td></tr></table></figure>


</li>
</ol>
<h5 id="6-分组查询"><a href="#6-分组查询" class="headerlink" title="6.分组查询:"></a>6.分组查询:</h5><ol>
<li><p>语法：GROUP BY</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT 分组字段,聚合函数 FROM 表名 GROUP BY 分组字段;</span><br><span class="line">-- 举例，按性别分组，展示数学平均分和人数</span><br><span class="line">SELECT sex, AVG(math), COUNT(id) FROM student GROUP BY sex;</span><br><span class="line">-- 举例，按性别分组，展示数学平均分和人数 要求：分数不低于70分</span><br><span class="line">SELECT sex, AVG(math), COUNT(id) FROM student WHERE math &gt; 70 GROUP BY sex;</span><br><span class="line">-- 举例，按性别分组，展示数学平均分和人数 要求：分数不低于70分，且分组之后人数要大于2人</span><br><span class="line">SELECT sex, AVG(math), COUNT(id) FROM student WHERE math &gt; 70 GROUP BY sex HAVING COUNT(id) &gt; 2;</span><br></pre></td></tr></table></figure>


</li>
</ol>
<ol start="2">
<li><p>注意：</p>
<ol>
<li>分组之后查询的字段：分组字段、聚合函数</li>
<li>WHERE 和 HAVING 的区别：<ol>
<li>WHERE在分组之前进行限定，如果不满足条件，则不参与分组；HAVING在分组之后进行限定，如果不满足条件则不会呗查询出来。</li>
<li>WHERE之后不可以跟聚合函数，HAVING可以进行聚合函数的判断。</li>
</ol>
</li>
</ol>
</li>
</ol>
<h5 id="7-分页查询"><a href="#7-分页查询" class="headerlink" title="7.分页查询:"></a>7.分页查询:</h5><ol>
<li>语法：LIMIT 开始的索引,每页查询的条数；</li>
<li>公式：开始的索引 = (当前的页码 - 1) * 每页显示的条数</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 每页显示3条记录</span><br><span class="line">SELECT * FROM 表名 LIMIT 0,3; -- 第一页</span><br><span class="line">SELECT * FROM 表名 LIMIT 0,3; -- 第二页</span><br><span class="line">SELECT * FROM 表名 LIMIT 0,3; -- 第三页</span><br></pre></td></tr></table></figure>



<ol start="3">
<li>LIMIT是MySQL特有的语法方式。</li>
</ol>
<h5 id="8-约束："><a href="#8-约束：" class="headerlink" title="8.约束："></a>8.约束：</h5><ul>
<li><p>概念：对表中的数据进行限定，保证数据的正确性、有效性和完整性。</p>
</li>
<li><p>分类：</p>
<ol>
<li><p>主键约束：primary key，非空且唯一</p>
<pre><code>一张表只能有一个字段为主键；主键就是表中记录的唯一标识</code></pre><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建表示添加主键约束</span><br><span class="line">CREATE TABLE 表名(</span><br><span class="line">	id INT PRIMARY KEY,</span><br><span class="line">    NAME VARCHAR(20) </span><br><span class="line">);</span><br><span class="line">-- 创建表后，添加非空约束</span><br><span class="line">ALTER TABLE 表名 MODIFY id PRIMARY KEY;</span><br><span class="line">-- 删除非空约束</span><br><span class="line">ALTER TABLE 表名 DROP PRIMARY KEY;</span><br><span class="line">-- 自动增长</span><br><span class="line">CREATE TABLE 表名(</span><br><span class="line">	id INT PRIMARY KEY AUTO_increment,-- 主键且自动增长</span><br><span class="line">    NAME VARCHAR(20)</span><br><span class="line">);</span><br><span class="line">ALTER TABLE 表名 MODIFY id INT AUTO_INCREMENT;-- 添加自动增长</span><br></pre></td></tr></table></figure>
</li>
<li><p>非空约束</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建表示添加非空约束</span><br><span class="line">CREATE TABLE 表名(</span><br><span class="line">	id INT,</span><br><span class="line">    NAME VARCHAR(20) NOT NULL</span><br><span class="line">);</span><br><span class="line">-- 创建表后，添加非空约束</span><br><span class="line">ALTER TABLE 表名 MODIFY NAME VARCHAR(20) NOT NULL;</span><br><span class="line">-- 删除非空约束</span><br><span class="line">ALTER TABLE 表名 MODIFY NAME VARCHAR(20);</span><br></pre></td></tr></table></figure>
</li>
<li><p>唯一约束</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建表时，添加唯一约束</span><br><span class="line">CREATE TABLE 表名（</span><br><span class="line">	id INT,</span><br><span class="line">	phone_number VARCHAR(20) UNIQUE</span><br><span class="line">）;</span><br><span class="line">-- 删除唯一约束</span><br><span class="line">ALTER TABLE 表名 DROP INDEX phone_number; -- 唯一约束又名唯一索引</span><br><span class="line">--创建表后，添加唯一约束</span><br><span class="line">ALTER TABLE 表名 MODIFY phone_number VARCHAR(20) UNIQUE;</span><br></pre></td></tr></table></figure>
</li>
<li><p>外键约束：foreign key，值可以为NULL</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 创建表示添加外键约束(外键对应主表应先创建，否则会报错)</span><br><span class="line">CREATE TABLE 表名(</span><br><span class="line">	id INT,</span><br><span class="line">    NAME VARCHAR(20) NOT NULL</span><br><span class="line">    外键列, -- 外键对应主表的主键</span><br><span class="line">    CONSTRAINT 外键名称 FOREIGN KEY (外键列名称) REFERENCES 主表名称(主表列名)</span><br><span class="line">);</span><br><span class="line">-- 删除外键</span><br><span class="line">ALTER TABLE 表名 DROP FOREIGN KEY 外键名称;</span><br><span class="line">-- 创建表之后，添加外键</span><br><span class="line">ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN (外键列名称) REFERENCES 主表名称(主表列名称)</span><br></pre></td></tr></table></figure>

<ul>
<li>级联操作</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 添加外键时，设置级联更新，级联删除（可以同时写，也可以分开写）</span><br><span class="line">ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN (外键列名称) REFERENCES 主表名称(主表列名称) ON UPDATE CASCADE ON DELETE CASCADE;</span><br></pre></td></tr></table></figure>

<ul>
<li>分类：<ul>
<li>级联更新：ON UPDATE CASCADE</li>
<li>级联删除：ON DELETE CASCADE</li>
</ul>
</li>
</ul>
</li>
</ol>
</li>
</ul>
<h3 id="4-DCL（Data-Control-Language）"><a href="#4-DCL（Data-Control-Language）" class="headerlink" title="4.DCL（Data Control Language）"></a>4.DCL（Data Control Language）</h3><p>定义数据库的访问权限和安全级别，以及创建用户。关键字：GRANT、REVOKE等。</p>
]]></content>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
</search>
